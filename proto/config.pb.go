// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: proto/config.proto

package rpc

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type WhiteListAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Whitelists []*WhiteList `protobuf:"bytes,1,rep,name=whitelists,proto3" json:"whitelists,omitempty"`
}

func (x *WhiteListAllResponse) Reset() {
	*x = WhiteListAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhiteListAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhiteListAllResponse) ProtoMessage() {}

func (x *WhiteListAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhiteListAllResponse.ProtoReflect.Descriptor instead.
func (*WhiteListAllResponse) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{0}
}

func (x *WhiteListAllResponse) GetWhitelists() []*WhiteList {
	if x != nil {
		return x.Whitelists
	}
	return nil
}

type WhiteList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *WhiteList) Reset() {
	*x = WhiteList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhiteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhiteList) ProtoMessage() {}

func (x *WhiteList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhiteList.ProtoReflect.Descriptor instead.
func (*WhiteList) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{1}
}

func (x *WhiteList) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *WhiteList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type WhiteListDeleteParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *WhiteListDeleteParams) Reset() {
	*x = WhiteListDeleteParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhiteListDeleteParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhiteListDeleteParams) ProtoMessage() {}

func (x *WhiteListDeleteParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhiteListDeleteParams.ProtoReflect.Descriptor instead.
func (*WhiteListDeleteParams) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{2}
}

func (x *WhiteListDeleteParams) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

type ConfigSaveParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackerAnnounceInterval    int32 `protobuf:"varint,1,opt,name=tracker_announce_interval,json=trackerAnnounceInterval,proto3" json:"tracker_announce_interval,omitempty"`
	TrackerAnnounceIntervalMin int32 `protobuf:"varint,2,opt,name=tracker_announce_interval_min,json=trackerAnnounceIntervalMin,proto3" json:"tracker_announce_interval_min,omitempty"`
	TrackerReaperInterval      int32 `protobuf:"varint,3,opt,name=tracker_reaper_interval,json=trackerReaperInterval,proto3" json:"tracker_reaper_interval,omitempty"`
	TrackerBatchUpdateInterval int32 `protobuf:"varint,4,opt,name=tracker_batch_update_interval,json=trackerBatchUpdateInterval,proto3" json:"tracker_batch_update_interval,omitempty"`
	TrackerMaxPeers            int32 `protobuf:"varint,5,opt,name=tracker_max_peers,json=trackerMaxPeers,proto3" json:"tracker_max_peers,omitempty"`
	GeodbEnabled               bool  `protobuf:"varint,6,opt,name=geodb_enabled,json=geodbEnabled,proto3" json:"geodb_enabled,omitempty"`
}

func (x *ConfigSaveParams) Reset() {
	*x = ConfigSaveParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigSaveParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSaveParams) ProtoMessage() {}

func (x *ConfigSaveParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSaveParams.ProtoReflect.Descriptor instead.
func (*ConfigSaveParams) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigSaveParams) GetTrackerAnnounceInterval() int32 {
	if x != nil {
		return x.TrackerAnnounceInterval
	}
	return 0
}

func (x *ConfigSaveParams) GetTrackerAnnounceIntervalMin() int32 {
	if x != nil {
		return x.TrackerAnnounceIntervalMin
	}
	return 0
}

func (x *ConfigSaveParams) GetTrackerReaperInterval() int32 {
	if x != nil {
		return x.TrackerReaperInterval
	}
	return 0
}

func (x *ConfigSaveParams) GetTrackerBatchUpdateInterval() int32 {
	if x != nil {
		return x.TrackerBatchUpdateInterval
	}
	return 0
}

func (x *ConfigSaveParams) GetTrackerMaxPeers() int32 {
	if x != nil {
		return x.TrackerMaxPeers
	}
	return 0
}

func (x *ConfigSaveParams) GetGeodbEnabled() bool {
	if x != nil {
		return x.GeodbEnabled
	}
	return false
}

type ConfigGeneral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunMode   string `protobuf:"bytes,1,opt,name=run_mode,json=runMode,proto3" json:"run_mode,omitempty"`
	LogLevel  string `protobuf:"bytes,2,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	LogColour bool   `protobuf:"varint,3,opt,name=log_colour,json=logColour,proto3" json:"log_colour,omitempty"`
}

func (x *ConfigGeneral) Reset() {
	*x = ConfigGeneral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGeneral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGeneral) ProtoMessage() {}

func (x *ConfigGeneral) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGeneral.ProtoReflect.Descriptor instead.
func (*ConfigGeneral) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigGeneral) GetRunMode() string {
	if x != nil {
		return x.RunMode
	}
	return ""
}

func (x *ConfigGeneral) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *ConfigGeneral) GetLogColour() bool {
	if x != nil {
		return x.LogColour
	}
	return false
}

type ConfigTracker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Public              bool   `protobuf:"varint,1,opt,name=public,proto3" json:"public,omitempty"`
	Listen              string `protobuf:"bytes,2,opt,name=listen,proto3" json:"listen,omitempty"`
	Tls                 bool   `protobuf:"varint,3,opt,name=tls,proto3" json:"tls,omitempty"`
	Ipv6                bool   `protobuf:"varint,4,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	Ipv6Only            bool   `protobuf:"varint,5,opt,name=ipv6_only,json=ipv6Only,proto3" json:"ipv6_only,omitempty"`
	AutoRegister        bool   `protobuf:"varint,6,opt,name=auto_register,json=autoRegister,proto3" json:"auto_register,omitempty"`
	ReaperInterval      string `protobuf:"bytes,7,opt,name=reaper_interval,json=reaperInterval,proto3" json:"reaper_interval,omitempty"`
	AnnounceInterval    string `protobuf:"bytes,8,opt,name=announce_interval,json=announceInterval,proto3" json:"announce_interval,omitempty"`
	AnnounceIntervalMin string `protobuf:"bytes,9,opt,name=announce_interval_min,json=announceIntervalMin,proto3" json:"announce_interval_min,omitempty"`
	HnrThreshold        string `protobuf:"bytes,10,opt,name=hnr_threshold,json=hnrThreshold,proto3" json:"hnr_threshold,omitempty"`
	AllowNonRoutable    bool   `protobuf:"varint,11,opt,name=allow_non_routable,json=allowNonRoutable,proto3" json:"allow_non_routable,omitempty"`
	AllowClientIp       bool   `protobuf:"varint,12,opt,name=allow_client_ip,json=allowClientIp,proto3" json:"allow_client_ip,omitempty"`
	MaxPeers            uint32 `protobuf:"varint,13,opt,name=max_peers,json=maxPeers,proto3" json:"max_peers,omitempty"`
}

func (x *ConfigTracker) Reset() {
	*x = ConfigTracker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigTracker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigTracker) ProtoMessage() {}

func (x *ConfigTracker) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigTracker.ProtoReflect.Descriptor instead.
func (*ConfigTracker) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigTracker) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *ConfigTracker) GetListen() string {
	if x != nil {
		return x.Listen
	}
	return ""
}

func (x *ConfigTracker) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *ConfigTracker) GetIpv6() bool {
	if x != nil {
		return x.Ipv6
	}
	return false
}

func (x *ConfigTracker) GetIpv6Only() bool {
	if x != nil {
		return x.Ipv6Only
	}
	return false
}

func (x *ConfigTracker) GetAutoRegister() bool {
	if x != nil {
		return x.AutoRegister
	}
	return false
}

func (x *ConfigTracker) GetReaperInterval() string {
	if x != nil {
		return x.ReaperInterval
	}
	return ""
}

func (x *ConfigTracker) GetAnnounceInterval() string {
	if x != nil {
		return x.AnnounceInterval
	}
	return ""
}

func (x *ConfigTracker) GetAnnounceIntervalMin() string {
	if x != nil {
		return x.AnnounceIntervalMin
	}
	return ""
}

func (x *ConfigTracker) GetHnrThreshold() string {
	if x != nil {
		return x.HnrThreshold
	}
	return ""
}

func (x *ConfigTracker) GetAllowNonRoutable() bool {
	if x != nil {
		return x.AllowNonRoutable
	}
	return false
}

func (x *ConfigTracker) GetAllowClientIp() bool {
	if x != nil {
		return x.AllowClientIp
	}
	return false
}

func (x *ConfigTracker) GetMaxPeers() uint32 {
	if x != nil {
		return x.MaxPeers
	}
	return 0
}

type ConfigRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listen string `protobuf:"bytes,1,opt,name=listen,proto3" json:"listen,omitempty"`
	Tls    bool   `protobuf:"varint,2,opt,name=tls,proto3" json:"tls,omitempty"`
	Key    bool   `protobuf:"varint,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ConfigRPC) Reset() {
	*x = ConfigRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRPC) ProtoMessage() {}

func (x *ConfigRPC) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRPC.ProtoReflect.Descriptor instead.
func (*ConfigRPC) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{6}
}

func (x *ConfigRPC) GetListen() string {
	if x != nil {
		return x.Listen
	}
	return ""
}

func (x *ConfigRPC) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *ConfigRPC) GetKey() bool {
	if x != nil {
		return x.Key
	}
	return false
}

type ConfigStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Host       string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port       uint32 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	User       string `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Password   string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Database   string `protobuf:"bytes,6,opt,name=database,proto3" json:"database,omitempty"`
	Properties string `protobuf:"bytes,7,opt,name=properties,proto3" json:"properties,omitempty"`
}

func (x *ConfigStore) Reset() {
	*x = ConfigStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigStore) ProtoMessage() {}

func (x *ConfigStore) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigStore.ProtoReflect.Descriptor instead.
func (*ConfigStore) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{7}
}

func (x *ConfigStore) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ConfigStore) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ConfigStore) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ConfigStore) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ConfigStore) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ConfigStore) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ConfigStore) GetProperties() string {
	if x != nil {
		return x.Properties
	}
	return ""
}

type ConfigGeoDB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	ApiKey  string `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Enabled bool   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *ConfigGeoDB) Reset() {
	*x = ConfigGeoDB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGeoDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGeoDB) ProtoMessage() {}

func (x *ConfigGeoDB) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGeoDB.ProtoReflect.Descriptor instead.
func (*ConfigGeoDB) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{8}
}

func (x *ConfigGeoDB) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ConfigGeoDB) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *ConfigGeoDB) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type ConfigAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	General *ConfigGeneral `protobuf:"bytes,1,opt,name=general,proto3" json:"general,omitempty"`
	Tracker *ConfigTracker `protobuf:"bytes,2,opt,name=tracker,proto3" json:"tracker,omitempty"`
	Rpc     *ConfigRPC     `protobuf:"bytes,3,opt,name=rpc,proto3" json:"rpc,omitempty"`
	Store   *ConfigStore   `protobuf:"bytes,4,opt,name=store,proto3" json:"store,omitempty"`
	Geodb   *ConfigGeoDB   `protobuf:"bytes,5,opt,name=geodb,proto3" json:"geodb,omitempty"`
}

func (x *ConfigAllResponse) Reset() {
	*x = ConfigAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigAllResponse) ProtoMessage() {}

func (x *ConfigAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigAllResponse.ProtoReflect.Descriptor instead.
func (*ConfigAllResponse) Descriptor() ([]byte, []int) {
	return file_proto_config_proto_rawDescGZIP(), []int{9}
}

func (x *ConfigAllResponse) GetGeneral() *ConfigGeneral {
	if x != nil {
		return x.General
	}
	return nil
}

func (x *ConfigAllResponse) GetTracker() *ConfigTracker {
	if x != nil {
		return x.Tracker
	}
	return nil
}

func (x *ConfigAllResponse) GetRpc() *ConfigRPC {
	if x != nil {
		return x.Rpc
	}
	return nil
}

func (x *ConfigAllResponse) GetStore() *ConfigStore {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *ConfigAllResponse) GetGeodb() *ConfigGeoDB {
	if x != nil {
		return x.Geodb
	}
	return nil
}

var File_proto_config_proto protoreflect.FileDescriptor

var file_proto_config_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x69, 0x6b, 0x61, 0x22, 0x47, 0x0a, 0x14, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x69, 0x6b, 0x61, 0x2e, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x73, 0x22, 0x37, 0x0a, 0x09, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x15,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0xdd, 0x02,
	0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x61, 0x76, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x41,
	0x0a, 0x1d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x69,
	0x6e, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61,
	0x70, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x15, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x61, 0x70, 0x65,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x1d, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x1a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x65, 0x72,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72,
	0x4d, 0x61, 0x78, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x65, 0x6f, 0x64,
	0x62, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x67, 0x65, 0x6f, 0x64, 0x62, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x66, 0x0a,
	0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x75, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x75, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x75, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x43,
	0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x22, 0xc9, 0x03, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76,
	0x36, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x70, 0x76, 0x36, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x70, 0x76, 0x36, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x75,
	0x74, 0x6f, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x70, 0x65, 0x72,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x6e, 0x72,
	0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x68, 0x6e, 0x72, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6e, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x75, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x4e, 0x6f, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x65, 0x72,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x22, 0x47, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x50, 0x43, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xb5, 0x01, 0x0a, 0x0b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x54, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x6f, 0x44,
	0x42, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6d, 0x69, 0x6b, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x2d, 0x0a,
	0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x69, 0x6b, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x03,
	0x72, 0x70, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x69, 0x6b, 0x61,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x50, 0x43, 0x52, 0x03, 0x72, 0x70, 0x63, 0x12,
	0x27, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6d, 0x69, 0x6b, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x67, 0x65, 0x6f, 0x64,
	0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x69, 0x6b, 0x61, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x6f, 0x44, 0x42, 0x52, 0x05, 0x67, 0x65, 0x6f, 0x64,
	0x62, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6c, 0x65, 0x69, 0x67, 0x68, 0x6d, 0x61, 0x63, 0x64, 0x6f, 0x6e, 0x61, 0x6c, 0x64, 0x2f, 0x6d,
	0x69, 0x6b, 0x61, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_config_proto_rawDescOnce sync.Once
	file_proto_config_proto_rawDescData = file_proto_config_proto_rawDesc
)

func file_proto_config_proto_rawDescGZIP() []byte {
	file_proto_config_proto_rawDescOnce.Do(func() {
		file_proto_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_config_proto_rawDescData)
	})
	return file_proto_config_proto_rawDescData
}

var file_proto_config_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_config_proto_goTypes = []interface{}{
	(*WhiteListAllResponse)(nil),  // 0: mika.WhiteListAllResponse
	(*WhiteList)(nil),             // 1: mika.WhiteList
	(*WhiteListDeleteParams)(nil), // 2: mika.WhiteListDeleteParams
	(*ConfigSaveParams)(nil),      // 3: mika.ConfigSaveParams
	(*ConfigGeneral)(nil),         // 4: mika.ConfigGeneral
	(*ConfigTracker)(nil),         // 5: mika.ConfigTracker
	(*ConfigRPC)(nil),             // 6: mika.ConfigRPC
	(*ConfigStore)(nil),           // 7: mika.ConfigStore
	(*ConfigGeoDB)(nil),           // 8: mika.ConfigGeoDB
	(*ConfigAllResponse)(nil),     // 9: mika.ConfigAllResponse
}
var file_proto_config_proto_depIdxs = []int32{
	1, // 0: mika.WhiteListAllResponse.whitelists:type_name -> mika.WhiteList
	4, // 1: mika.ConfigAllResponse.general:type_name -> mika.ConfigGeneral
	5, // 2: mika.ConfigAllResponse.tracker:type_name -> mika.ConfigTracker
	6, // 3: mika.ConfigAllResponse.rpc:type_name -> mika.ConfigRPC
	7, // 4: mika.ConfigAllResponse.store:type_name -> mika.ConfigStore
	8, // 5: mika.ConfigAllResponse.geodb:type_name -> mika.ConfigGeoDB
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_config_proto_init() }
func file_proto_config_proto_init() {
	if File_proto_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhiteListAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhiteList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhiteListDeleteParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigSaveParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigGeneral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigTracker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigGeoDB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_config_proto_goTypes,
		DependencyIndexes: file_proto_config_proto_depIdxs,
		MessageInfos:      file_proto_config_proto_msgTypes,
	}.Build()
	File_proto_config_proto = out.File
	file_proto_config_proto_rawDesc = nil
	file_proto_config_proto_goTypes = nil
	file_proto_config_proto_depIdxs = nil
}
